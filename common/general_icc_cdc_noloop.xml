<?xml version="1.0" encoding="UTF-8"?>

<design name="$DESIGN_NAME">
  <constraint type="relative" name="in->s1:: req ">
    <description>Delay matching of Logic with Pipeline Request Signal</description>
    <base>
      <path>
        <startpoint>[remove_from_collection [get_pins edge*/* -filter "direction==in"] [get_pins "edge*/Lreq edge*/Rack edge*/edge_reset edge*/edge_ctrl_reset"]]</startpoint>
        <endpoint>$edge_clk_m_latch_in</endpoint>   
	<exclude>EdgeExcludeNone</exclude>
      </path>
    </base>
    
    <enforced>
      <path>
        <startpoint>[get_pins -of_objects edge*/*DL_in_s1_mybuf1 -filter "direction==in"]</startpoint>
        <endpoint>[get_pins -of_objects edge*/*DL_in_s1_mybuf1 -filter "direction==out"]</endpoint>
	<exclude>EdgeExcludeNone</exclude>
      </path>
      <path delayTarget="true">
        <startpoint>[get_pins -of_objects edge*/*DL_in_s1_mybuf1 -filter "direction==out"]</startpoint>
        <endpoint>[get_pins -of_objects edge*/*DL_in_s1_mybufn -filter "direction==in"]</endpoint>
	<exclude>EdgeExcludeNone</exclude>
      </path>
      <path> 
        <startpoint>[get_pins -of_objects edge*/*DL_in_s1_mybufn -filter "direction==in"]</startpoint>
        <endpoint>[get_pins -of_objects edge*/*DL_in_s1_mybufn -filter "direction==out"]</endpoint>
	<exclude>EdgeExcludeNone</exclude>
      </path>
      <path>
        <startpoint>$edge_clk_m_pin</startpoint>
        <endpoint>$edge_clk_m_latch_in</endpoint>   
	<exclude>EdgeExcludeNone</exclude>
      </path>
    </enforced>
  </constraint>
  
  <constraint type="relative" name="s1->s2:: req ">
    <description>Delay matching of Logic with Pipeline Request Signal</description>
    <base>
      <path>
        <startpoint>$edge_clk_m_latch_out</startpoint>
        <endpoint>$edge_clk_s_latch_in</endpoint>   
	<exclude>[get_object_name [add_to_collection [get_cells edge*/CT_PATH*] [get_pins edge*/Rack]]]</exclude>
      </path>
      <path>
        <startpoint>$edge_clk_m_pin</startpoint>
        <endpoint>$edge_clk_m_latch_in</endpoint>   
	<exclude>EdgeExcludeNone</exclude>
      </path>
    </base>
    
    <enforced>
      <path>
        <startpoint>[get_pins -of_objects edge*/*DL_s1_s2_mybuf1 -filter "direction==in"]</startpoint>
        <endpoint>[get_pins -of_objects edge*/*DL_s1_s2_mybuf1 -filter "direction==out"]</endpoint>
	<exclude>EdgeExcludeNone</exclude>
      </path>
      <path delayTarget="true">
        <startpoint>[get_pins -of_objects edge*/*DL_s1_s2_mybuf1 -filter "direction==out"]</startpoint>
        <endpoint>[get_pins -of_objects edge*/*DL_s1_s2_mybufn -filter "direction==in"]</endpoint>
	<exclude>EdgeExcludeNone</exclude>
      </path>
      <path> 
        <startpoint>[get_pins -of_objects edge*/*DL_s1_s2_mybufn -filter "direction==in"]</startpoint>
        <endpoint>[get_pins -of_objects edge*/*DL_s1_s2_mybufn -filter "direction==out"]</endpoint>
	<exclude>EdgeExcludeNone</exclude>
      </path>
      <path>
        <startpoint>$edge_clk_s_pin</startpoint>
        <endpoint>$edge_clk_s_latch_in</endpoint>   
	<exclude>EdgeExcludeNone</exclude>
      </path>
    </enforced>
  </constraint>
 
  <constraint type="relative" name="s2->out:: req ">
    <description>Delay matching of Logic with Pipeline Request Signal</description>
    <base>
      <path>
        <startpoint>$edge_clk_s_latch_out</startpoint>
        <endpoint>[get_pins edge*/* -filter "direction==out"]</endpoint>   
	<exclude>EdgeExcludeNone</exclude>
      </path>
      <path>
        <startpoint>$edge_clk_s_pin</startpoint>
        <endpoint>$edge_clk_s_latch_in</endpoint>   
	<exclude>EdgeExcludeNone</exclude>
      </path>
    </base>
    
    <enforced>
      <path>
        <startpoint>[get_pins -of_objects edge*/*DL_s2_out_mybuf1 -filter "direction==in"]</startpoint>
        <endpoint>[get_pins -of_objects edge*/*DL_s2_out_mybuf1 -filter "direction==out"]</endpoint>
	<exclude>EdgeExcludeNone</exclude>
      </path>
      <path delayTarget="true">
        <startpoint>[get_pins -of_objects edge*/*DL_s2_out_mybuf1 -filter "direction==out"]</startpoint>
        <endpoint>[get_pins -of_objects edge*/*DL_s2_out_mybufn -filter "direction==in"]</endpoint>
	<exclude>EdgeExcludeNone</exclude>
      </path>
      <path> 
        <startpoint>[get_pins -of_objects edge*/*DL_s2_out_mybufn -filter "direction==in"]</startpoint>
        <endpoint>[get_pins -of_objects edge*/*DL_s2_out_mybufn -filter "direction==out"]</endpoint>
	<exclude>EdgeExcludeNone</exclude>
      </path>
    </enforced>
  </constraint>
  
</design>

